plugins {
id 'com.android.application'
// (إضافة جديدة) قمنا بإضافة أداة التحليل الاحترافية PMD
id 'pmd'
}

android {
namespace 'com.keyboardtest1'
compileSdk 34

defaultConfig {
applicationId "com.keyboardtest1"
minSdk 21
targetSdk 34
versionCode 1
versionName "1.0"
}

buildTypes {
release {
minifyEnabled false
proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
}
}

// الطبقة الأولى: إعدادات صارمة لمترجم Java
compileOptions {
sourceCompatibility JavaVersion.VERSION_1_8
targetCompatibility JavaVersion.VERSION_1_8
compilerArgs += ["-Xlint:all", "-Werror"]
}

// الطبقة الثانية: إعدادات صارمة لأداة فحص الجودة Lint
lint {
checkReleaseBuilds true
checkDependencies true
warningsAsErrors true
abortOnError true
}
}

// الطبقة الثالثة: قاعدة عامة لكل مهام Java في المشروع
tasks.withType(JavaCompile) {
options.compilerArgs << "-Xlint:all"
options.compilerArgs << "-Werror"
}

// (إضافة جديدة) الطبقة الرابعة: إعدادات صارمة للمحقق الخبير PMD
pmd {
// سيقوم بفحص كل الملفات
sourceSets = [sourceSets.main]
// سيتجاهل الأخطاء التي لا يمكن إصلاحها (نادراً ما تحتاجها)
ignoreFailures = false
// سيستخدم مجموعة القواعد الأكثر صرامة المتاحة
ruleSetFiles = files("config/pmd/ruleset.xml")
ruleSets = ["java-basic", "java-braces", "java-strings", "java-design", "java-unusedcode"]
// أي مشكلة يجدها، حتى لو بسيطة، ستوقف عملية البناء
consoleOutput = true
}

// هذا السطر يربط مهمة الفحص الرئيسية بمهمة PMD
// مما يعني أن PMD سيعمل تلقائياً عند إجراء الفحص
tasks.named("check") {
dependsOn 'pmd'
}

dependencies {
implementation 'androidx.appcompat:appcompat:1.6.1'
implementation 'com.google.android.material:material:1.9.0'
implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
}